<section>
  <div class="left-side m1">
    {{>weather}}
    <div class="parent links flex-col">
      <a class="link-title spreader"><i class="fas fa-link"></i> My Links</a>
      <a class="link">Develop site</a>
      <a class="link">useful links for portfolio</a>
      <a class="link">Business</a>
      <a class="link"><i class="fas fa-plus emoji-plus "></i></a>
    </div>
  </div>
  <div class="container flex-col">

    <h4 class="greeting">Welcome, {{userName}}</h4>
    <form class="todoForm">
      <input type="text" placeholder="To do" />
    </form>
    <ul class="todoList"></ul>
  </div>
  <div class="parent right-side m1 flex-col">
    <div class="folder-title spreader"><i class="far fa-folder-open"></i> My Folder</div>
    <div class="folder">Routine</div>
    <div class="folder selected">Career</div>
    <div class="folder">Business</div>
    <div class="folder">My Dog</div>
    <div class="folder"><i class="fas fa-plus emoji-plus "></i></div>
  </div>
  <form action="/login/logout" method="GET" class="logout">
    <button type="submit" class="logout-btn">Logout</button>
  </form>
</section>

<script type="module">
  import { setFolder} from './js/getTodo.js' 
  
  //when User click "My Folders" or "My Links"
  const onClick = (e) =>{
    const childrenDivs = e.currentTarget.parentNode.children
    const lists = Array.from(childrenDivs).slice(1) //except first Div = buttons to toggle
    lists.forEach(element=>element.classList.toggle('FadeInOut'))
  }

  //when User click create Folder or create Link button
  const formDisplay = (e) =>{
    e.currentTarget.parentElement.lastElementChild.removeEventListener('click', formDisplay)
    e.currentTarget.innerHTML = `
     <form class="place-form">
        <input class="Input" type="text" placeholder="Enter the Name" name="folder" required=""/>
        <button type="submit">Submit</button>
      </form>
    `
    e.currentTarget.addEventListener('submit', onSubmitFolder)
  } 

  const onSubmitFolder = async(e) =>{
    e.preventDefault();
    let input = e.currentTarget.querySelector('.Input').value
    
    //send data to different Router depends on Links or Folders
    const isLink = e.currentTarget.classList.contains('link')
    await setFolder(input, isLink)

    const parent = e.target.parentElement.parentElement
    parent.lastElementChild.remove()
    createFolder(input, parent, isLink)
  }

  const createFolder = (Name, parent, isLink) =>{
    const className = isLink ? 'link' : 'folder'
    const element = isLink ? 'a' : 'div'
    const newDiv = `
      <${element} class=${className}>${Name}</${element}>
      <${element} class=${className}><i class="fas fa-plus emoji-plus "></i></${element}>
      `
    parent.insertAdjacentHTML('beforeend', newDiv)
    parent.lastElementChild.addEventListener('click', formDisplay)
  }

  const init = () =>{
    //button to spread Folders and Links
    const spreader = document.querySelectorAll('.spreader')
  
    //parent node of Folders and Links
    const parents = document.querySelectorAll('.parent')

    parents.forEach(parent=>parent.lastElementChild.addEventListener('click', formDisplay))
    spreader.forEach(btn=>btn.addEventListener('click', onClick))
  }

  window.addEventListener('DOMContentLoaded', init)

</script>