<section>
  <div class="left-side m1">
    {{>weather}}
    <div class="parent links flex-col">
      <a class="link-title spreadButton"><i class="fas fa-link"></i> My Links</a>
      
    </div>
  </div>
  <div class="container flex-col">

    <h4 class="greeting">Welcome, {{userName}}</h4>
    <form class="todoForm">
      <input type="text" placeholder="To do" />
    </form>
    <ul class="todoList"></ul>
  </div>
  <div class="parent right-side m1 flex-col">
    <div class="folder-title spreadButton"><i class="far fa-folder-open"></i> My Folder</div>
    
  </div>
  <form action="/login/logout" method="GET" class="logout">
    <button type="submit" class="logout-btn">Logout</button>
  </form>
</section>

<script type="module">
  import { setFolder, getInitialData} from './js/getTodo.js' 
  let FolderData = {}
  let LinkData = {}

  const init = async() =>{
    //button to spread Folders and Links
    const spreadButtons = document.querySelectorAll('.spreadButton')
  
    //parent node of Folders and Links
    const parents = document.querySelectorAll('.parent')
    //parents[0] = link parent Div
    //parents[1] = folder parent Div

    const data = await getInitialData() 
    FolderData = data.folders
    LinkData = data.links

    Object.keys(LinkData).forEach(link =>{
      const newLink = `<a class="link FadeInOut">${link}</a>`
      parents[0].insertAdjacentHTML('beforeend', newLink)
    })
    const addButtonLink = '<a class="link FadeInOut"><i class="fas fa-plus emoji-plus "></a>'
    parents[0].insertAdjacentHTML('beforeend', addButtonLink)

    Object.keys(FolderData).forEach(folder =>{
      const newFolder = `<div class="folder FadeInOut">${folder}</div>`
      parents[1].insertAdjacentHTML('beforeend', newFolder)
    })
    const addButtonFolder = '<div class="folder FadeInOut"><i class="fas fa-plus emoji-plus "></div>'
    parents[1].insertAdjacentHTML('beforeend', addButtonFolder)

    parents.forEach(parent=>parent.lastElementChild.addEventListener('click', formDisplay))
    spreadButtons.forEach(btn=>btn.addEventListener('click', spreadFolder))
  }

  //when User click "My Folders" or "My Links"
  const spreadFolder = (e) =>{
    const childrenDivs = e.currentTarget.parentNode.children
    const lists = Array.from(childrenDivs).slice(1) //except first Div = buttons to toggle
    lists.forEach(element=>element.classList.toggle('FadeInOut'))
  }

  //when User click create Folder or create Link button
  const formDisplay = (e) =>{
    e.currentTarget.parentElement.lastElementChild.removeEventListener('click', formDisplay)
    e.currentTarget.innerHTML = `
     <form class="place-form">
        <input class="Input" type="text" placeholder="Enter the Name" name="folder" required=""/>
        <button type="submit">Submit</button>
      </form>
    `
    e.currentTarget.addEventListener('submit', onSubmitFolder)
  } 

  const onSubmitFolder = async(e) =>{
    e.preventDefault();
    let input = e.currentTarget.querySelector('.Input').value
    
    //send data to different Router depends on Links or Folders
    const isLink = e.currentTarget.classList.contains('link')
    await setFolder(input, isLink)

    const parent = e.target.parentElement.parentElement
    parent.lastElementChild.remove()
    createFolder(input, parent, isLink)
  }

  const createFolder = (Name, parent, isLink) =>{
    const className = isLink ? 'link' : 'folder'
    const element = isLink ? 'a' : 'div'
    const newDiv = `
      <${element} class=${className}>${Name}</${element}>
      <${element} class=${className}><i class="fas fa-plus emoji-plus "></i></${element}>
      `
    parent.insertAdjacentHTML('beforeend', newDiv)
    parent.lastElementChild.addEventListener('click', formDisplay)
  }

  window.addEventListener('DOMContentLoaded', init)

</script>